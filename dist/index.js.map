{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../node_modules/.pnpm/@finsweet+ts-utils@0.37.3/node_modules/@finsweet/ts-utils/dist/helpers/simulateEvent.js", "../node_modules/.pnpm/@finsweet+ts-utils@0.37.3/node_modules/@finsweet/ts-utils/dist/webflow/breakpoints.js", "../node_modules/.pnpm/@finsweet+ts-utils@0.37.3/node_modules/@finsweet/ts-utils/dist/webflow/getCurrentBreakpoint.js", "../src/utils/createElement.ts", "../src/utils/initSplide.ts", "../src/pages/authors.ts", "../src/pages/gear.ts", "../src/pages/guides.ts", "../src/pages/search.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`http://localhost:${SERVE_PORT}/esbuild`).addEventListener('change', () =>\n  location.reload()\n);\n", "/**\n * Dispatches a custom event that bubbles from the target.\n * @param target The element where the event will originate.\n * @param events The event name or an array of event names.\n * @returns True if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n */\nexport const simulateEvent = (target, events) => {\n    if (!Array.isArray(events))\n        events = [events];\n    const eventsSuccess = events.map((event) => target.dispatchEvent(new Event(event, { bubbles: true })));\n    return eventsSuccess.every((success) => success);\n};\n", "/**\n * Defines the default media queries for Webflow's breakpoints.\n */\nexport const WEBFLOW_BREAKPOINTS = new Map([\n    ['tiny', '(max-width: 479px)'],\n    ['small', '(max-width: 767px)'],\n    ['medium', '(max-width: 991px)'],\n    ['main', '(min-width: 992px)'],\n]);\n", "import { WEBFLOW_BREAKPOINTS } from './breakpoints';\n/**\n * Checks the current breakpoint based on the window media.\n *\n * @returns A {@link WebflowBreakpoint} string.\n */\nexport const getCurrentBreakpoint = () => {\n    for (const [breakpoint, mediaQuery] of WEBFLOW_BREAKPOINTS) {\n        if (window.matchMedia(mediaQuery).matches) {\n            return breakpoint;\n        }\n    }\n    return 'main';\n};\n", "/**\n * A function to programatically create an element of any type\n * @param type what type of element is it\n * @param location to what element should it be added as a child to\n * @param options what additional items should be added, e.g. class, dataset, text, callback or attribute\n * @returns the HTML element\n */\n\nexport const createElement = (type, location, options = {}) => {\n  const element = document.createElement(type);\n\n  Object.entries(options).forEach(([key, value]) => {\n    if (key === 'class') {\n      element.classList.add(value);\n      return;\n    }\n\n    if (key === 'dataset') {\n      Object.entries(value).forEach(([dataKey, dataValue]) => {\n        element.dataset[dataKey] = dataValue;\n      });\n      return;\n    }\n\n    if (key === 'text') {\n      element.textContent = value;\n      return;\n    }\n\n    if (key === 'callback') {\n      element.onload = value;\n      return;\n    }\n\n    element.setAttribute(key, value);\n  });\n\n  location.appendChild(element);\n  return element;\n};\n", "import { getCurrentBreakpoint } from '@finsweet/ts-utils';\n\nimport { createElement } from '$utils/createElement';\n\nexport const initSplide = () => {\n  console.log('init splide');\n\n  createElement('script', document.body, {\n    src: 'https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/js/splide.min.js',\n    callback: slider,\n  });\n\n  function slider() {\n    console.log('slider');\n    const standard = document.querySelector('.splide.is-team');\n    if (standard) {\n      const standardSplide = new Splide(standard, {\n        type: 'loop',\n        gap: '2.5rem',\n        perPage: 3,\n        perMove: 1,\n        breakpoints: {\n          991: {\n            perPage: 2,\n          },\n          767: {\n            perPage: 1,\n          },\n        },\n      }).mount();\n    }\n\n    const home = document.querySelector('.splide.is-home');\n    if (home) {\n      const homeSplide = new Splide(home, {\n        type: 'loop',\n        gap: '1.5rem',\n        perPage: 4,\n        perMove: 1,\n        pagination: false,\n        breakpoints: {\n          991: {\n            perPage: 3,\n          },\n          767: {\n            perPage: 2,\n          },\n          479: {\n            perPage: 1,\n          },\n        },\n      });\n\n      homeSplideLogic();\n      window.addEventListener('resize', homeSplideLogic);\n\n      function homeSplideLogic() {\n        if (getCurrentBreakpoint() === 'main') {\n          homeSplide.destroy();\n        } else {\n          homeSplide.mount();\n        }\n      }\n    }\n  }\n};\n", "import { simulateEvent } from '@finsweet/ts-utils';\n\nexport const authors = () => {\n  window.onload = function () {\n    const sortTrigger = document.querySelector('[fs-cmssort-element=\"trigger\"]');\n    simulateEvent(sortTrigger, 'click');\n\n    setTimeout(() => {\n      const sortList = document.querySelector('[fs-cmscombine-element=\"list\"]');\n      [...sortList?.children].forEach((child, index) => {\n        if (index <= 3) return;\n\n        child.remove();\n      });\n    }, 100);\n  };\n\n  const name = document.querySelector('[data-author=\"name\"]').textContent?.replace(' ', '+'),\n    more = document.querySelector('[data-author=\"more\"]');\n\n  more.href = `/search-results?author=${name}`;\n};\n", "import { getCurrentBreakpoint } from '@finsweet/ts-utils';\n\nexport const gear = () => {\n  recommendedReads();\n  alignImages();\n  window.addEventListener('resize', alignImages);\n\n  function recommendedReads() {\n    const wrapper = document.querySelector('[data-recommended=\"wrapper\"]');\n    if (!wrapper) return;\n\n    // get the two groups of links\n    const main = wrapper.querySelector('[data-recommended=\"main\"]'),\n      sub = wrapper.querySelector('[data-recommended=\"sub\"]');\n\n    // get the main items and remove the sub group if there are enough\n    const mainLinks = [...main.querySelectorAll('[data-recommended=\"link\"]')];\n    if (mainLinks.length === 3) {\n      sub.remove();\n      return;\n    }\n\n    // find out what we already have and how many we need\n    const includedLinks = mainLinks.map((link) => link.href);\n    let numberRequired = 3 - mainLinks.length;\n\n    // go through the sub links and add/remove as required\n    const subLinks = [...sub.querySelectorAll('[data-recommended=\"link\"]')];\n    subLinks.forEach((link) => {\n      // remove the item if there are already enough or if it is already included\n      if (numberRequired === 0 || includedLinks.includes(link.href)) {\n        link.remove();\n        return;\n      }\n\n      // keep the item and decrement the remaining required\n      numberRequired -= 1;\n    });\n  }\n\n  function alignImages() {\n    const base = document.querySelector('.aspect_wrapper.is-author');\n    const toAlign = document.querySelector('.aspect_wrapper');\n    const currentBreakpoint = getCurrentBreakpoint();\n\n    if (currentBreakpoint === 'main' || currentBreakpoint === 'medium') {\n      const toAlignWidth = toAlign.offsetWidth;\n      const toAlignHeight = base.offsetHeight;\n\n      toAlign.style.paddingBottom = `${(toAlignHeight / toAlignWidth) * 100}%`;\n    } else {\n      toAlign.style.removeProperty('padding-bottom');\n    }\n  }\n};\n", "import { getCurrentBreakpoint } from '@finsweet/ts-utils';\n\nexport const guides = () => {\n  alignImages();\n  window.addEventListener('resize', alignImages);\n\n  function alignImages() {\n    const base = document.querySelector('.aspect_wrapper.is-square');\n    const toAlign = document.querySelector('.aspect_wrapper');\n    const currentBreakpoint = getCurrentBreakpoint();\n\n    if (currentBreakpoint === 'main' || currentBreakpoint === 'medium') {\n      const toAlignWidth = toAlign.offsetWidth;\n      const toAlignHeight = base.offsetHeight;\n\n      toAlign.style.paddingBottom = `${(toAlignHeight / toAlignWidth) * 100}%`;\n    } else {\n      toAlign.style.removeProperty('padding-bottom');\n    }\n  }\n};\n", "import { simulateEvent } from '@finsweet/ts-utils';\n\nexport const search = () => {\n  window.onload = function () {\n    const sortTrigger = document.querySelector('[fs-cmssort-element=\"trigger\"]');\n    simulateEvent(sortTrigger, 'click');\n  };\n};\n", "import { initSplide } from '$utils/initSplide';\n\nimport { authors } from './pages/authors';\nimport { gear } from './pages/gear';\nimport { guides } from './pages/guides';\nimport { home } from './pages/home';\nimport { search } from './pages/search';\n\nwindow.Webflow ||= [];\nwindow.Webflow.push(() => {\n  // define the follow attribute for links\n  const links = [...document.querySelectorAll('a')];\n  links.forEach((link) => {\n    const follow = link.host === window.location.host ? 'follow' : 'nofollow';\n    link.setAttribute('rel', follow);\n  });\n\n  const { pathname } = window.location;\n\n  // add hidden input values\n  const hiddenInputs = [...document.querySelectorAll('input[type=\"hidden\"]')];\n  hiddenInputs.forEach((input) => {\n    switch (input.name) {\n      case 'URL':\n        input.value = pathname;\n    }\n  });\n\n  // run page specific code\n  if (pathname.includes('/authors/')) authors();\n  if (pathname.includes('/gear/')) gear();\n  if (pathname.includes('/guides/')) guides();\n  if (pathname.includes('/search-results')) search();\n\n  const hasSplide = document.querySelector('.splide');\n  if (hasSplide) initSplide();\n});\n"],
  "mappings": "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",
  "names": ["location", "home", "homeSplideLogic"]
}
